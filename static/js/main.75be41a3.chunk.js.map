{"version":3,"sources":["fonts/Lato-Regular.woff","fonts/OpenSans-Regular.woff","styles/global.js","styles/theme.js","styles/mediaqueries.js","components/Heading/heading.style.js","components/Heading/heading.js","assets/icons/cross.svg","components/Modal/modal.style.js","components/Modal/modal.js","components/Tooltip/tooltip.style.js","components/Tooltip/tooltip.js","assets/icons/arrow-down.svg","assets/icons/hide.svg","assets/icons/info.svg","assets/icons/show.svg","components/Toolbar/toolbar.style.js","components/Toolbar/toolbar.js","components/Toolbar/toolbar.constants.js","assets/icons/drag-dots.svg","components/Accordion/accordion.style.js","components/Accordion/accordion.js","components/Basic/basic.style.js","components/Basic/basic.js","components/Choropleth/choropleth.style.js","components/Choropleth/choropleth.js","components/Gradient/gradient.style.js","components/Gradient/gradient.js","components/Slider/slider.style.js","components/Slider/slider.js","components/Timeline/timeline.style.js","components/Timeline/timeline.js","screens/Home/home.constants.js","screens/Home/home.style.js","screens/Home/home.js","App.js","config/router/paths.js","index.js"],"names":["GlobalStyles","createGlobalStyle","OpenSansRegular","LatoRegular","Border","Color","iron","silver","Font","FontSize","FontWeight","bold","small","LineHeight","Radius","Shadow","Spacing","isTablet","Content","styled","h1","Heading","content","Card","div","CloseButton","button","CloseIcon","img","Info","p","Wrapper","Modal","onCloseModal","openModalAnimation","style","onClick","alt","src","closeIcon","dangerouslySetInnerHTML","__html","Container","normal","Indicator","Tooltip","CollapseButton","CollapseIcon","props","isAccordionOpen","CollapseTooltipContainer","InfoButton","InfoIcon","InfoTooltipContainer","VisibilityButton","VisibilityIcon","VisibilityTooltipContainer","Toolbar","isLayerVisible","onChangeCollapse","onChangeInfo","onChangeVisibility","hideIcon","showIcon","infoIcon","collapseIcon","Column","section","DragButton","DragIcon","Header","Accordion","description","children","title","useState","setAccordionOpen","isModalDisplay","setModalDisplay","setLayerVisible","openAccordionAnimation","useSpring","transform","opacity","transition","dragIcon","ColorContainer","color","Legend","Name","Basic","items","map","item","name","Bar","Choropleth","string","split","join","colors","Link","NameContainer","Text","Gradient","caption","text","gradientColors","toString","SliderBar","SliderWrapper","Thumb","ThumbTouchArea","ValueLegend","ValuesWrapper","Slider","maxDateFormat","minDateFormat","onChangeDate","step","MIN","parseInt","MAX","values","setValues","min","max","onChange","val","renderTrack","onMouseDown","onTouchStart","ref","background","getTrackBackground","renderThumb","valueItem","Timeline","timeline","dateFormat","maxDate","minDate","dateFormatLowercase","toLowerCase","format","Date","Types","Body","main","View","body","Home","legendData","setLegendData","startDate","endDate","legendDates","setLegendDates","console","log","useEffect","fetch","then","response","json","data","getLegendComponent","type","C","legendItem","id","App","basename","process","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75be41a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Lato-Regular.c8a1fd8e.woff\";","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.dd7aff7c.woff\";","import { createGlobalStyle } from 'styled-components';\nimport LatoRegular from '../fonts/Lato-Regular.woff';\nimport OpenSansRegular from '../fonts/OpenSans-Regular.woff';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    @import url(${OpenSansRegular});\n    font-family: OpenSans-Regular;\n  }\n  @font-face {\n    font-family: 'Lato-Regular';\n    src: url(${LatoRegular}) format('woff');\n  }\n  @font-face {\n    font-family: 'OpenSans-Regular';\n    src: url(${OpenSansRegular}) format('woff');\n  }\n`;\n","export const Border = {\n  basic: '1px solid rgba(26, 28, 34, 0.1)',\n};\n\nexport const Color = {\n  background: '#333333',\n  body: '#606060',\n  dialog: '#888888',\n  heading: '#41484E',\n  link: '#1E9CFF',\n  primary: '#FFFFFF',\n  slider: '#CAB2D6',\n  neutral: {\n    iron: '#6B6B6B',\n    silver: '#CCCCCC',\n  },\n};\n\nexport const Font = {\n  body: 'OpenSans-Regular',\n  heading: 'Lato-Regular',\n};\n\nexport const FontSize = {\n  big: '14px',\n  small: '12px',\n};\n\nexport const FontWeight = {\n  bold: 700,\n  small: 400,\n};\n\nexport const LineHeight = {\n  body: '15px',\n  dialog: '20px',\n  heading: '18px',\n  legend: '12px',\n};\n\nexport const Radius = {\n  basic: '4px',\n  circle: '50%',\n};\n\nexport const Shadow = {\n  veryHighlighted: '0px 20px 30px rgba(0, 0, 0, 0.1)',\n};\n\nexport const Spacing = {\n  xxs: '4px',\n  xs: '8px',\n  s: '16px',\n  m: '24px',\n  l: '32px',\n  xl: '40px',\n  xxl: '48px',\n};\n","export const isTablet = '@media (min-width: 480px)' || '@media only screen and (min-width: 480px)';\nexport const isLaptop = '@media (min-width: 769px)' || '@media only screen and (min-width: 769px)';\nexport const isLargeDesktop = '@media (min-width: 1025px)' || '@media only screen and (min-width: 1025px)';\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\nimport { isTablet } from 'styles/mediaqueries';\n\nexport const Content = styled.h1`\n  color: ${Color.heading};\n  font-family: ${Font.heading};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.bold};\n  line-height: ${LineHeight.heading};\n  margin: 0;\n  ${isTablet} {\n    font-size: ${FontSize.big};\n    white-space: nowrap;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './heading.style';\n\nexport const Heading = ({ content }) => (\n  <S.Content>{content}</S.Content>\n);\n\nHeading.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/cross.153db873.svg\";","import styled from 'styled-components';\nimport {\n  Border, Color, Font, LineHeight, Radius, Spacing,\n} from 'styles/theme';\nimport { isTablet } from 'styles/mediaqueries';\n\nexport const Card = styled.div`\n  background-color: ${Color.primary};\n  border: ${Border.basic};\n  border-radius: ${Radius.basic};\n  max-height: 600px;\n  margin: auto;\n  overflow: auto;\n  padding: 40px 20px;\n  position: relative;\n  width: 80%;\n  ${isTablet} {\n    padding: 60px;\n    width: 40%;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  height: 24px;\n  position: absolute;\n  right: ${Spacing.m};\n  top: ${Spacing.m};\n  width: 24px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const CloseIcon = styled.img`\n  height: 18px;\n  width: 18px;\n`;\n\nexport const Info = styled.p`\n  color: ${Color.body};\n  font-family: ${Font.body};\n  line-height: ${LineHeight.dialog};\n`;\n\nexport const Wrapper = styled.div`\n  background-color: rgba(0, 0, 0, 0.4);\n  height: 100%;\n  left: 0;\n  overflow: auto;\n  padding-top: 100px;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n`;\n","import React from 'react';\nimport { animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport closeIcon from 'assets/icons/cross.svg';\nimport * as S from './modal.style';\n\nexport const Modal = ({\n  content,\n  onCloseModal,\n  openModalAnimation,\n}) => (\n  <S.Wrapper>\n    <animated.div style={openModalAnimation}>\n      <S.Card>\n        <S.CloseButton onClick={onCloseModal}>\n          <S.CloseIcon alt=\"close modal\" src={closeIcon} />\n        </S.CloseButton>\n        <S.Info dangerouslySetInnerHTML={{ __html: content }} />\n      </S.Card>\n    </animated.div>\n  </S.Wrapper>\n);\n\nModal.propTypes = {\n  content: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  openModalAnimation: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Border, Color, Font, FontSize, FontWeight, LineHeight, Radius, Shadow, Spacing,\n} from 'styles/theme';\n\nexport const Container = styled.div`\n  background: ${Color.primary};\n  border: ${Border.basic}; \n  border-radius: ${Radius.basic}; \n  box-shadow: ${Shadow.veryHighlighted};\n  box-sizing: border-box;\n  display: inline-flex;\n  flex-direction: column;\n  height: auto;\n  padding: calc(${Spacing.xs} + ${Spacing.xxs}) calc(${Spacing.xs} + ${Spacing.xs});\n  position: relative;\n`;\n\nexport const Content = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.heading};\n  font-size: ${FontSize.big};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.dialog};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const Indicator = styled.div`\n  background: ${Color.primary};\n  border: ${Border.basic}; \n  border-top: transparent;\n  border-right: transparent;\n  box-shadow: ${Shadow.veryHighlighted};\n  height: 18.55px;\n  left: 40%;\n  top: 35px;\n  transform: rotate(-45deg);\n  position: absolute;\n  width: 18.55px;\n  z-index: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './tooltip.style';\n\nexport const Tooltip = ({ content }) => (\n  <S.Container>\n    <S.Content>{content}</S.Content>\n    <S.Indicator />\n  </S.Container>\n);\n\nTooltip.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/arrow-down.f52426b7.svg\";","export default __webpack_public_path__ + \"static/media/hide.92e63dee.svg\";","export default __webpack_public_path__ + \"static/media/info.c491fdbc.svg\";","export default __webpack_public_path__ + \"static/media/show.222b0076.svg\";","import styled from 'styled-components';\nimport { Color } from 'styles/theme';\nimport { isTablet } from 'styles/mediaqueries';\n\nexport const CollapseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const CollapseIcon = styled.img`\n  transition: transform 0.3s ease-out;\n  width: 12px;\n  ${(props) => props.isAccordionOpen && `\n    transform: rotate(180deg);\n  `}\n`;\n\nexport const CollapseTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  left: 9px;\n  position: absolute;\n  ${CollapseButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  background: ${Color.primary};\n  box-sizing: border-box;\n  display: inline-flex;\n  flex-direction: row;\n  height: auto;\n  justify-content: space-between;\n  margin-left: 30px;\n  position: relative;\n  width: 80px;\n  ${isTablet} {\n    margin-left: 63px;\n  }\n`;\n\nexport const InfoButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InfoIcon = styled.img`\n  height: 14px;\n  width: 14px;\n`;\n\nexport const InfoTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  left: -8px;\n  position: absolute;\n  ${InfoButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n\nexport const VisibilityButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const VisibilityIcon = styled.img`\n  height: 14px;\n  width: 14px;\n`;\n\nexport const VisibilityTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  right: 20px;\n  position: absolute;\n  ${VisibilityButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'components/Tooltip/tooltip';\nimport collapseIcon from 'assets/icons/arrow-down.svg';\nimport hideIcon from 'assets/icons/hide.svg';\nimport infoIcon from 'assets/icons/info.svg';\nimport showIcon from 'assets/icons/show.svg';\nimport * as C from './toolbar.constants';\nimport * as S from './toolbar.style';\n\nexport const Toolbar = ({\n  isAccordionOpen, isLayerVisible, onChangeCollapse, onChangeInfo, onChangeVisibility,\n}) => (\n  <S.Wrapper>\n    <S.VisibilityButton onClick={onChangeVisibility}>\n      <S.VisibilityIcon alt=\"changeVisibility\" src={isLayerVisible ? hideIcon : showIcon} />\n    </S.VisibilityButton>\n    <S.VisibilityTooltipContainer>\n      <Tooltip content={isLayerVisible ? C.HIDE_TEXT : C.SHOW_TEXT} />\n    </S.VisibilityTooltipContainer>\n    <S.InfoButton onClick={onChangeInfo}>\n      <S.InfoIcon alt=\"show description\" src={infoIcon} />\n    </S.InfoButton>\n    <S.InfoTooltipContainer>\n      <Tooltip content={C.INFO_TEXT} />\n    </S.InfoTooltipContainer>\n    <S.CollapseButton onClick={onChangeCollapse}>\n      <S.CollapseIcon alt=\"change collapse\" isAccordionOpen={isAccordionOpen} src={collapseIcon} />\n    </S.CollapseButton>\n    <S.CollapseTooltipContainer>\n      <Tooltip content={isAccordionOpen ? C.COLLAPSE_TEXT : C.EXPAND_TEXT} />\n    </S.CollapseTooltipContainer>\n  </S.Wrapper>\n);\n\nToolbar.propTypes = {\n  isAccordionOpen: PropTypes.bool.isRequired,\n  isLayerVisible: PropTypes.bool.isRequired,\n  onChangeCollapse: PropTypes.func.isRequired,\n  onChangeInfo: PropTypes.func.isRequired,\n  onChangeVisibility: PropTypes.func.isRequired,\n};\n","export const COLLAPSE_TEXT = 'Collapse layer';\nexport const EXPAND_TEXT = 'Expand layer';\nexport const HIDE_TEXT = 'Hide layer';\nexport const INFO_TEXT = 'Layer info';\nexport const SHOW_TEXT = 'Show layer';\n","export default __webpack_public_path__ + \"static/media/drag-dots.cc4eb6cb.svg\";","import styled from 'styled-components';\nimport { Color, Border, Spacing } from 'styles/theme';\nimport { isTablet } from 'styles/mediaqueries';\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n`;\n\nexport const Container = styled.section`\n  background: ${Color.primary};\n  border: ${Border.basic};\n  box-sizing: border-box;\n  max-width: 320px;\n  position: relative;\n${isTablet} {\nmax-width: 520px;\n}\n`;\n\nexport const Content = styled.div`\n  background: ${Color.primary};\n  border: 1px solid transparent;\n  padding: 0 ${Spacing.s};\n`;\n\nexport const DragButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const DragIcon = styled.img`\n  height: 18px;\n  margin-right: 10px;\n  width: 10px;\n`;\n\nexport const Header = styled.div`\n  align-items: center;\n  background: transparent;\n  border: none;\n  box-sizing: border-box;\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${Spacing.xs} ${Spacing.s};\n  width: 100%;\n`;\n","import React, { useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport { Heading } from 'components/Heading/heading';\nimport { Modal } from 'components/Modal/modal';\nimport { Toolbar } from 'components/Toolbar/toolbar';\nimport dragIcon from 'assets/icons/drag-dots.svg';\nimport * as S from './accordion.style';\n\nexport const Accordion = ({ description, children, title }) => {\n  const [isAccordionOpen, setAccordionOpen] = useState(false);\n  const [isModalDisplay, setModalDisplay] = useState(false);\n  const [isLayerVisible, setLayerVisible] = useState(true);\n  const handleVisibility = () => setLayerVisible(!isLayerVisible);\n\n  const openAccordionAnimation = useSpring({\n    transform: isAccordionOpen ? 'translateY(0)' : 'translateY(-15%)',\n    opacity: isAccordionOpen ? 1 : 0,\n    transition: '0.3s ease-out',\n  });\n\n  const openModalAnimation = useSpring({\n    opacity: isModalDisplay ? '1' : '0',\n    transform: isModalDisplay ? 'scale(1)' : 'scale(0)',\n    transition: '0.3s ease-out',\n  });\n\n  return (\n    <S.Container isAccordionOpen={isAccordionOpen}>\n      <S.Header>\n        <S.Column>\n          <S.DragButton>\n            <S.DragIcon alt=\"drag section\" src={dragIcon} />\n          </S.DragButton>\n          <Heading content={title} />\n        </S.Column>\n        <Toolbar\n          isAccordionOpen={isAccordionOpen}\n          isLayerVisible={isLayerVisible}\n          onChangeCollapse={() => setAccordionOpen(!isAccordionOpen)}\n          onChangeInfo={() => setModalDisplay(true)}\n          onChangeVisibility={handleVisibility}\n        />\n      </S.Header>\n      {isAccordionOpen && (\n        <animated.div style={openAccordionAnimation}>\n          <S.Content>\n            {isLayerVisible && children}\n          </S.Content>\n        </animated.div>\n      )}\n      {isModalDisplay && (\n        <Modal\n          content={description}\n          onCloseModal={() => setModalDisplay(false)}\n          openModalAnimation={openModalAnimation}\n        />\n      )}\n    </S.Container>\n  );\n};\n\nAccordion.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight, Radius, Spacing,\n} from 'styles/theme';\n\nexport const ColorContainer = styled.div`\n  background: ${(props) => props.color};\n  border-radius: ${Radius.circle};\n  height: 12px;\n  margin: 0 ${Spacing.xs} 0 0;\n  width: 12px;\n`;\n\nexport const Legend = styled.div`\n  align-items: left;\n  display: flex;\n  height: 18px;\n  flex-direction: row;\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 18px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './basic.style';\n\nexport const Basic = ({ items }) => (\n  <S.Wrapper>\n    {items.map((item) => (\n      <S.Legend>\n        <S.ColorContainer color={item.color} />\n        <S.Name>{item.name}</S.Name>\n      </S.Legend>\n    ))}\n  </S.Wrapper>\n);\n\nBasic.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\nimport { isTablet } from 'styles/mediaqueries';\n\nexport const Bar = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ColorContainer = styled.div`\n  background: ${(props) => props.color};\n  box-sizing: border-box;\n  height: 7px;\n  width: 31px;\n  ${isTablet} {\n    width: 54px;\n  }\n`;\n\nexport const Legend = styled.div`\n  align-items: center;\n  display: flex;\n  height: 27px;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './choropleth.style';\n\nexport const Choropleth = ({ items }) => {\n  const removeWhiteSpaces = (string) => string.split(' ').join('');\n\n  return (\n    <S.Bar>\n      {items.map((item) => (\n        <S.Legend>\n          <S.ColorContainer color={item.color} />\n          <S.Name>{removeWhiteSpaces(item.name)}</S.Name>\n        </S.Legend>\n      ))}\n    </S.Bar>\n  );\n};\n\nChoropleth.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\n\nexport const Bar = styled.div`\n  box-sizing: border-box;\n  height: 7px;\n  width: 100%;\n  ${(props) => props.colors && `\n    background: linear-gradient(to right, ${props.colors});\n  `}\n`;\n\nexport const Link = styled.button`\n  background: transparent;\n  border: none;\n  color: ${Color.link};\n  cursor: pointer;\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  white-space: nowrap;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const NameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 6px;\n  width: 100%;\n`;\n\nexport const Text = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.body};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './gradient.style';\n\nexport const Gradient = ({ caption, items, text }) => {\n  const gradientColors = items.map((item) => item.color).toString();\n\n  return (\n    <S.Wrapper>\n      <S.Bar colors={gradientColors} />\n      <S.NameContainer>\n        {items.map((item) => (\n          <S.Name>{item.name}</S.Name>\n        ))}\n      </S.NameContainer>\n      <S.Text>\n        {text}\n      </S.Text>\n      <S.Link>{caption}</S.Link>\n    </S.Wrapper>\n  );\n};\n\nGradient.propTypes = {\n  caption: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight, Radius,\n} from 'styles/theme';\n\nexport const SliderBar = styled.div`\n  align-self: center;\n  height: 3px;\n  width: 100%;\n`;\n\nexport const SliderWrapper = styled.div`\n  display: flex;\n  height: 10px;\n  width: 100%;\n`;\n\nexport const Thumb = styled.div`\n  background: ${Color.slider};\n  border-radius: ${Radius.circle};\n  height: 12px;\n  width: 12px;\n`;\n\nexport const ThumbTouchArea = styled.div`\n  align-items: center;\n  background: transparent;\n  display: flex;\n  height: 42px;\n  justify-content: center;\n  width: 42px;\n`;\n\nexport const ValueLegend = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 6px 0 0 0;\n`;\n\nexport const ValuesWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0;\n`;\n","import React, { useState } from 'react';\nimport { Range, getTrackBackground } from 'react-range';\nimport PropTypes from 'prop-types';\nimport { Color } from 'styles/theme';\nimport * as S from './slider.style';\n\nexport const Slider = ({\n  maxDateFormat, minDateFormat, onChangeDate, step,\n}) => {\n  const MIN = parseInt(minDateFormat, 10);\n  const MAX = parseInt(maxDateFormat, 10);\n  const [values, setValues] = useState([2003, 2010]);\n  return (\n    <>\n      <Range\n        values={values}\n        step={step}\n        min={MIN}\n        max={MAX}\n        onChange={(val) => {\n          setValues(val);\n          onChangeDate(val);\n        }}\n        renderTrack={({\n          props, children, style, onMouseDown, onTouchStart,\n        }) => (\n          <S.SliderWrapper\n            onMouseDown={onMouseDown}\n            onTouchStart={onTouchStart}\n            style={style}\n          >\n            <S.SliderBar\n              ref={props.ref}\n              style={{\n                background: getTrackBackground({\n                  values,\n                  colors: [`${Color.neutral.silver}`, `${Color.slider}`, `${Color.neutral.silver}`],\n                  min: MIN,\n                  max: MAX,\n                }),\n              }}\n            >\n              {children}\n            </S.SliderBar>\n          </S.SliderWrapper>\n        )}\n        renderThumb={({ props }) => (\n          <S.ThumbTouchArea\n            {...props}\n            style={props.style}\n          >\n            <S.Thumb />\n          </S.ThumbTouchArea>\n        )}\n      />\n      <S.ValuesWrapper>\n        {values.map((valueItem) => (\n          <S.ValueLegend>{valueItem}</S.ValueLegend>\n        ))}\n      </S.ValuesWrapper>\n    </>\n  );\n};\n\nSlider.propTypes = {\n  maxDateFormat: PropTypes.number.isRequired,\n  minDateFormat: PropTypes.number.isRequired,\n  onChangeDate: PropTypes.func.isRequired,\n  onMouseDown: PropTypes.func.isRequired,\n  onTouchStart: PropTypes.func.isRequired,\n  ref: PropTypes.shape({}).isRequired,\n  step: PropTypes.number.isRequired,\n  style: PropTypes.shape({}).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { Slider } from 'components/Slider/slider';\nimport * as S from './timeline.style';\n\nexport const Timeline = ({ onChangeDate, timeline }) => {\n  const {\n    dateFormat, maxDate, minDate, step, /* speed, */\n  } = timeline;\n  const dateFormatLowercase = dateFormat.toLowerCase();\n  const maxDateFormat = format(new Date(maxDate), dateFormatLowercase);\n  const minDateFormat = format(new Date(minDate), dateFormatLowercase);\n\n  return (\n    <S.Wrapper>\n      <Slider\n        maxDateFormat={maxDateFormat}\n        minDateFormat={minDateFormat}\n        step={step}\n        onChangeDate={onChangeDate}\n      />\n    </S.Wrapper>\n  );\n};\n\nTimeline.propTypes = {\n  onChangeDate: PropTypes.func.isRequired,\n  timeline: PropTypes.shape({\n    dateFormat: PropTypes.string.isRequired,\n    maxDate: PropTypes.string.isRequired,\n    minDate: PropTypes.string.isRequired,\n    speed: PropTypes.number.isRequired,\n    step: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","export const Types = {\n  Basic: 'basic',\n  Choropleth: 'choropleth',\n  Gradient: 'gradient',\n  Timeline: 'timeline',\n};\n\nexport const GRADIENT_TEXT = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, metus ut sagittis aliquam, arcu nibh ornare quam, eu molestie eros tellus at leo.';\nexport const GRADIENT_CHECK_CAPTION = 'Check the data';\n","import styled from 'styled-components';\nimport { Color, Font } from 'styles/theme';\n\nexport const Body = styled.p`\n  color: ${Color.neutral.iron};\n  font-family: ${Font.body};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 15px;\n  margin: 0 0 16px 0;\n`;\n\nexport const Legend = styled.main`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 80px;\n`;\n\nexport const View = styled.body`\n  align-items: center;\n  background: ${Color.background};\n  display: flex;  \n  height: 900px;\n  justify-content: center;\n  width: 100vw;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion } from 'components/Accordion/accordion';\nimport { Basic } from 'components/Basic/basic';\nimport { Choropleth } from 'components/Choropleth/choropleth';\nimport { Gradient } from 'components/Gradient/gradient';\nimport { Timeline } from 'components/Timeline/timeline';\nimport * as C from './home.constants';\nimport * as S from './home.style';\n\nexport const Home = () => {\n  const [legendData, setLegendData] = useState();\n  const [legendDates, setLegendDates] = useState({ startDate: null, endDate: null });\n  console.log({ legendDates });\n\n  const getData = () => {\n    fetch('https://raw.githubusercontent.com/Vizzuality/front-end-code-challenge/master/data.json')\n      .then((response) => response.json())\n      .then((data) => setLegendData(data));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getLegendComponent = ({ type, items, timeline }) => {\n    const LEGEND_CONTENT = {\n      [C.Types.Basic]: <Basic items={items} />,\n      [C.Types.Choropleth]: <Choropleth items={items} />,\n      [C.Types.Gradient]: <Gradient\n        caption={C.GRADIENT_CHECK_CAPTION}\n        items={items}\n        text={C.GRADIENT_TEXT}\n      />,\n      [C.Types.Timeline]: <Timeline\n        timeline={timeline}\n        onChangeDate={(values) => setLegendDates({ startDate: values[0], endDate: values[1] })}\n      />,\n    };\n    return LEGEND_CONTENT[type];\n  };\n\n  return (\n    <S.View>\n      <S.Legend>\n        {legendData && legendData.map((legendItem) => (\n          <Accordion\n            description={legendItem?.description}\n            key={legendItem?.id}\n            title={legendItem?.name}\n          >\n            <S.Body>\n              {getLegendComponent({\n                items: legendItem.items,\n                timeline: legendItem.timeline,\n                type: legendItem.type,\n              })}\n            </S.Body>\n          </Accordion>\n        ))}\n      </S.Legend>\n    </S.View>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { GlobalStyles } from './styles/global';\nimport { HOME } from './config/router/paths';\nimport { Home } from './screens/Home/home';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={HOME} component={Home} exact />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","export const HOME = '/';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}