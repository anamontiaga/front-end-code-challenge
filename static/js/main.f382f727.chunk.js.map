{"version":3,"sources":["fonts/Lato-Regular.woff","fonts/OpenSans-Regular.woff","styles/global.js","styles/theme.js","components/Heading/heading.style.js","components/Heading/heading.js","assets/icons/cross.svg","components/Modal/modal.style.js","components/Modal/modal.js","components/Tooltip/tooltip.style.js","components/Tooltip/tooltip.js","assets/icons/arrow-down.svg","assets/icons/hide.svg","assets/icons/info.svg","assets/icons/show.svg","components/Toolbar/toolbar.style.js","components/Toolbar/toolbar.js","components/Toolbar/toolbar.constants.js","assets/icons/drag-dots.svg","components/Accordion/accordion.style.js","components/Accordion/accordion.js","components/BasicLegend/basicLegend.style.js","components/BasicLegend/basicLegend.js","components/ChoroplethLegend/choroplethLegend.style.js","components/ChoroplethLegend/choroplethLegend.js","components/GradientLegend/gradientLegend.style.js","components/GradientLegend/gradientLegend.js","screens/Home/home.constants.js","screens/Home/home.style.js","screens/Home/home.js","App.js","config/router/paths.js","index.js"],"names":["GlobalStyles","createGlobalStyle","OpenSansRegular","LatoRegular","Border","Color","Font","FontSize","FontWeight","bold","small","LineHeight","Radius","Shadow","Spacing","Content","styled","h1","Heading","content","Card","div","CloseButton","button","CloseIcon","img","Info","p","Wrapper","Modal","onCloseModal","openModalAnimation","style","onClick","alt","src","closeIcon","dangerouslySetInnerHTML","__html","Container","normal","Indicator","Tooltip","CollapseButton","CollapseIcon","props","isAccordionOpen","CollapseTooltipContainer","InfoButton","InfoIcon","InfoTooltipContainer","VisibilityButton","VisibilityIcon","VisibilityTooltipContainer","Toolbar","isLayerVisible","onChangeCollapse","onChangeInfo","onChangeVisibility","hideIcon","showIcon","infoIcon","collapseIcon","Column","section","DragButton","DragIcon","Header","Accordion","description","children","title","useState","setAccordionOpen","isModalDisplay","setModalDisplay","setLayerVisible","openAccordionAnimation","useSpring","transform","opacity","transition","dragIcon","ColorContainer","color","Legend","Name","BasicLegend","items","map","item","name","Bar","ChoroplethLegend","string","split","join","colors","Link","NameContainer","Text","GradientLegend","caption","text","gradientColors","toString","Types","Body","main","View","body","Home","legendData","setLegendData","useEffect","fetch","then","response","json","data","getLegendComponent","type","C","legendItem","id","App","basename","process","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f382f727.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Lato-Regular.c8a1fd8e.woff\";","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.dd7aff7c.woff\";","import { createGlobalStyle } from 'styled-components';\nimport LatoRegular from '../fonts/Lato-Regular.woff';\nimport OpenSansRegular from '../fonts/OpenSans-Regular.woff';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    @import url(${OpenSansRegular});\n    font-family: OpenSans-Regular;\n  }\n  @font-face {\n    font-family: 'Lato-Regular';\n    src: url(${LatoRegular}) format('woff');\n  }\n  @font-face {\n    font-family: 'OpenSans-Regular';\n    src: url(${OpenSansRegular}) format('woff');\n  }\n`;\n","export const Border = {\n  basic: '1px solid rgba(26, 28, 34, 0.1)',\n};\n\nexport const Color = {\n  background: '#333333',\n  body: '#606060',\n  dialog: '#888888',\n  heading: '#41484E',\n  link: '#1E9CFF',\n  primary: '#FFFFFF',\n};\n\nexport const Font = {\n  body: 'OpenSans-Regular',\n  heading: 'Lato-Regular',\n};\n\nexport const FontSize = {\n  big: '14px',\n  small: '12px',\n};\n\nexport const FontWeight = {\n  bold: 700,\n  small: 400,\n};\n\nexport const LineHeight = {\n  body: '15px',\n  dialog: '20px',\n  heading: '18px',\n  legend: '12px',\n};\n\nexport const Radius = {\n  basic: '4px',\n  circle: '50%',\n};\n\nexport const Shadow = {\n  veryHighlighted: '0px 20px 30px rgba(0, 0, 0, 0.1)',\n};\n\nexport const Spacing = {\n  xxs: '4px',\n  xs: '8px',\n  s: '16px',\n  m: '24px',\n  l: '32px',\n  xl: '40px',\n  xxl: '48px',\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\n\nexport const Content = styled.h1`\n  color: ${Color.heading};\n  font-family: ${Font.heading};\n  font-size: ${FontSize.big};\n  font-weight: ${FontWeight.bold};\n  line-height: ${LineHeight.heading};\n  margin: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './heading.style';\n\nexport const Heading = ({ content }) => (\n  <S.Content>{content}</S.Content>\n);\n\nHeading.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/cross.153db873.svg\";","import styled from 'styled-components';\nimport {\n  Border, Color, Font, LineHeight, Radius, Spacing,\n} from 'styles/theme';\n\nexport const Card = styled.div`\n  background-color: ${Color.primary};\n  border: ${Border.basic};\n  border-radius: ${Radius.basic};\n  max-height: 600px;\n  margin: auto;\n  overflow: auto;\n  padding: 60px;\n  position: relative;\n  width: 40%;\n`;\n\nexport const CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  height: 24px;\n  position: absolute;\n  right: ${Spacing.m};\n  top: ${Spacing.m};\n  width: 24px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const CloseIcon = styled.img`\n  height: 18px;\n  width: 18px;\n`;\n\nexport const Info = styled.p`\n  color: ${Color.body};\n  font-family: ${Font.body};\n  line-height: ${LineHeight.dialog};\n`;\n\nexport const Wrapper = styled.div`\n  background-color: rgba(0, 0, 0, 0.4);\n  height: 100%;\n  left: 0;\n  overflow: auto;\n  padding-top: 100px;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n`;\n","import React from 'react';\nimport { animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport closeIcon from 'assets/icons/cross.svg';\nimport * as S from './modal.style';\n\nexport const Modal = ({\n  content,\n  onCloseModal,\n  openModalAnimation,\n}) => (\n  <S.Wrapper>\n    <animated.div style={openModalAnimation}>\n      <S.Card>\n        <S.CloseButton onClick={onCloseModal}>\n          <S.CloseIcon alt=\"close modal\" src={closeIcon} />\n        </S.CloseButton>\n        <S.Info dangerouslySetInnerHTML={{ __html: content }} />\n      </S.Card>\n    </animated.div>\n  </S.Wrapper>\n);\n\nModal.propTypes = {\n  content: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  openModalAnimation: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Border, Color, Font, FontSize, FontWeight, LineHeight, Radius, Shadow, Spacing,\n} from 'styles/theme';\n\nexport const Container = styled.div`\n  background: ${Color.primary};\n  border: ${Border.basic}; \n  border-radius: ${Radius.basic}; \n  box-shadow: ${Shadow.veryHighlighted};\n  box-sizing: border-box;\n  display: inline-flex;\n  flex-direction: column;\n  height: auto;\n  padding: calc(${Spacing.xs} + ${Spacing.xxs}) calc(${Spacing.xs} + ${Spacing.xs});\n  position: relative;\n`;\n\nexport const Content = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.heading};\n  font-size: ${FontSize.big};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.dialog};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const Indicator = styled.div`\n  background: ${Color.primary};\n  border: ${Border.basic}; \n  border-top: transparent;\n  border-right: transparent;\n  box-shadow: ${Shadow.veryHighlighted};\n  height: 18.55px;\n  left: 40%;\n  top: 35px;\n  transform: rotate(-45deg);\n  position: absolute;\n  width: 18.55px;\n  z-index: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './tooltip.style';\n\nexport const Tooltip = ({ content }) => (\n  <S.Container>\n    <S.Content>{content}</S.Content>\n    <S.Indicator />\n  </S.Container>\n);\n\nTooltip.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/arrow-down.f52426b7.svg\";","export default __webpack_public_path__ + \"static/media/hide.92e63dee.svg\";","export default __webpack_public_path__ + \"static/media/info.c491fdbc.svg\";","export default __webpack_public_path__ + \"static/media/show.222b0076.svg\";","import styled from 'styled-components';\nimport { Color } from 'styles/theme';\n\nexport const CollapseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const CollapseIcon = styled.img`\n  transition: transform 0.3s ease-out;\n  width: 12px;\n  ${(props) => props.isAccordionOpen && `\n    transform: rotate(180deg);\n  `}\n`;\n\nexport const CollapseTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  left: 9px;\n  position: absolute;\n  ${CollapseButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n\nexport const Container = styled.div`\n  background: ${Color.primary};\n  box-sizing: border-box;\n  display: inline-flex;\n  flex-direction: row;\n  height: auto;\n  justify-content: space-between;\n  margin-left: 40px;\n  position: relative;\n  width: 80px;\n`;\n\nexport const InfoButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InfoIcon = styled.img`\n  height: 14px;\n  width: 14px;\n`;\n\nexport const InfoTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  left: -8px;\n  position: absolute;\n  ${InfoButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n\nexport const VisibilityButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  height: 30px;\n  padding-top: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const VisibilityIcon = styled.img`\n  height: 14px;\n  width: 14px;\n`;\n\nexport const VisibilityTooltipContainer = styled.div`\n  bottom: 40px;\n  display: none;\n  right: 20px;\n  position: absolute;\n  ${VisibilityButton}:hover + & {\n    display: inline-flex;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'components/Tooltip/tooltip';\nimport collapseIcon from 'assets/icons/arrow-down.svg';\nimport hideIcon from 'assets/icons/hide.svg';\nimport infoIcon from 'assets/icons/info.svg';\nimport showIcon from 'assets/icons/show.svg';\nimport * as C from './toolbar.constants';\nimport * as S from './toolbar.style';\n\nexport const Toolbar = ({\n  isAccordionOpen, isLayerVisible, onChangeCollapse, onChangeInfo, onChangeVisibility,\n}) => (\n  <S.Container>\n    <S.VisibilityButton onClick={onChangeVisibility}>\n      <S.VisibilityIcon alt=\"changeVisibility\" src={isLayerVisible ? hideIcon : showIcon} />\n    </S.VisibilityButton>\n    <S.VisibilityTooltipContainer>\n      <Tooltip content={isLayerVisible ? C.HIDE_TEXT : C.SHOW_TEXT} />\n    </S.VisibilityTooltipContainer>\n    <S.InfoButton onClick={onChangeInfo}>\n      <S.InfoIcon alt=\"show description\" src={infoIcon} />\n    </S.InfoButton>\n    <S.InfoTooltipContainer>\n      <Tooltip content={C.INFO_TEXT} />\n    </S.InfoTooltipContainer>\n    <S.CollapseButton onClick={onChangeCollapse}>\n      <S.CollapseIcon alt=\"change collapse\" isAccordionOpen={isAccordionOpen} src={collapseIcon} />\n    </S.CollapseButton>\n    <S.CollapseTooltipContainer>\n      <Tooltip content={isAccordionOpen ? C.COLLAPSE_TEXT : C.EXPAND_TEXT} />\n    </S.CollapseTooltipContainer>\n  </S.Container>\n);\n\nToolbar.propTypes = {\n  isAccordionOpen: PropTypes.bool.isRequired,\n  isLayerVisible: PropTypes.bool.isRequired,\n  onChangeCollapse: PropTypes.func.isRequired,\n  onChangeInfo: PropTypes.func.isRequired,\n  onChangeVisibility: PropTypes.func.isRequired,\n};\n","export const COLLAPSE_TEXT = 'Collapse layer';\nexport const EXPAND_TEXT = 'Expand layer';\nexport const HIDE_TEXT = 'Hide layer';\nexport const INFO_TEXT = 'Layer info';\nexport const SHOW_TEXT = 'Show layer';\n","export default __webpack_public_path__ + \"static/media/drag-dots.cc4eb6cb.svg\";","import styled from 'styled-components';\nimport { Color, Border, Spacing } from 'styles/theme';\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n`;\n\nexport const Container = styled.section`\n  background: ${Color.primary};\n  border: ${Border.basic};\n  box-sizing: border-box;\n  max-width: 520px;\n  position: relative;\n`;\n\nexport const Content = styled.div`\n  background: ${Color.primary};\n  padding: 0 ${Spacing.s} ${Spacing.s} ${Spacing.s};\n`;\n\nexport const DragButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const DragIcon = styled.img`\n  height: 18px;\n  margin-right: 10px;\n  width: 10px;\n`;\n\nexport const Header = styled.div`\n  align-items: center;\n  background: transparent;\n  border: none;\n  box-sizing: border-box;\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${Spacing.xs} ${Spacing.s};\n  width: 100%;\n`;\n","import React, { useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport { Heading } from 'components/Heading/heading';\nimport { Modal } from 'components/Modal/modal';\nimport { Toolbar } from 'components/Toolbar/toolbar';\nimport dragIcon from 'assets/icons/drag-dots.svg';\nimport * as S from './accordion.style';\n\nexport const Accordion = ({ description, children, title }) => {\n  const [isAccordionOpen, setAccordionOpen] = useState(false);\n  const [isModalDisplay, setModalDisplay] = useState(false);\n  const [isLayerVisible, setLayerVisible] = useState(true);\n  const handleVisibility = () => setLayerVisible(!isLayerVisible);\n\n  const openAccordionAnimation = useSpring({\n    transform: isAccordionOpen ? 'translateY(0)' : 'translateY(-15%)',\n    opacity: isAccordionOpen ? 1 : 0,\n    transition: '0.3s ease-out',\n  });\n\n  const openModalAnimation = useSpring({\n    opacity: isModalDisplay ? '1' : '0',\n    transform: isModalDisplay ? 'scale(1)' : 'scale(0)',\n    transition: '0.3s ease-out',\n  });\n\n  return (\n    <S.Container isAccordionOpen={isAccordionOpen}>\n      <S.Header>\n        <S.Column>\n          <S.DragButton>\n            <S.DragIcon alt=\"drag section\" src={dragIcon} />\n          </S.DragButton>\n          <Heading content={title} />\n        </S.Column>\n        <Toolbar\n          isAccordionOpen={isAccordionOpen}\n          isLayerVisible={isLayerVisible}\n          onChangeCollapse={() => setAccordionOpen(!isAccordionOpen)}\n          onChangeInfo={() => setModalDisplay(true)}\n          onChangeVisibility={handleVisibility}\n        />\n      </S.Header>\n      {isAccordionOpen && (\n        <animated.div style={openAccordionAnimation}>\n          <S.Content>\n            {isLayerVisible && children}\n          </S.Content>\n        </animated.div>\n      )}\n      {isModalDisplay && (\n        <Modal\n          content={description}\n          onCloseModal={() => setModalDisplay(false)}\n          openModalAnimation={openModalAnimation}\n        />\n      )}\n    </S.Container>\n  );\n};\n\nAccordion.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight, Radius, Spacing,\n} from 'styles/theme';\n\nexport const ColorContainer = styled.div`\n  background: ${(props) => props.color};\n  border-radius: ${Radius.circle};\n  height: 12px;\n  margin: 0 ${Spacing.xs} 0 0;\n  width: 12px;\n`;\n\nexport const Legend = styled.div`\n  align-items: left;\n  display: flex;\n  height: 18px;\n  flex-direction: row;\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 18px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './basicLegend.style';\n\nexport const BasicLegend = ({ items }) => (\n  <S.Wrapper>\n    {items.map((item) => (\n      <S.Legend>\n        <S.ColorContainer color={item.color} />\n        <S.Name>{item.name}</S.Name>\n      </S.Legend>\n    ))}\n  </S.Wrapper>\n);\n\nBasicLegend.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\n\nexport const Bar = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ColorContainer = styled.div`\n  background: ${(props) => props.color};\n  box-sizing: border-box;\n  height: 7px;\n  width: 54px;\n`;\n\nexport const Legend = styled.div`\n  align-items: center;\n  display: flex;\n  height: 27px;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './choroplethLegend.style';\n\nexport const ChoroplethLegend = ({ items }) => {\n  const removeWhiteSpaces = (string) => string.split(' ').join('');\n  return (\n    <S.Bar>\n      {items.map((item) => (\n        <S.Legend>\n          <S.ColorContainer color={item.color} />\n          <S.Name>{removeWhiteSpaces(item.name)}</S.Name>\n        </S.Legend>\n      ))}\n    </S.Bar>\n  );\n};\n\nChoroplethLegend.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Color, Font, FontSize, FontWeight, LineHeight,\n} from 'styles/theme';\n\nexport const Bar = styled.div`\n  box-sizing: border-box;\n  height: 7px;\n  width: 100%;\n  ${(props) => props.colors && `\n    background: linear-gradient(to right, ${props.colors});\n  `}\n`;\n\nexport const Link = styled.button`\n  background: transparent;\n  border: none;\n  color: ${Color.link};\n  cursor: pointer;\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  white-space: nowrap;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Name = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.legend};\n  margin: 0;\n  white-space: nowrap;\n`;\n\nexport const NameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 6px;\n  width: 100%;\n`;\n\nexport const Text = styled.p`\n  color: ${Color.dialog};\n  font-family: ${Font.body};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.normal};\n  line-height: ${LineHeight.body};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './gradientLegend.style';\n\nexport const GradientLegend = ({ caption, items, text }) => {\n  const gradientColors = items.map((item) => item.color).toString();\n\n  return (\n    <S.Wrapper>\n      <S.Bar colors={gradientColors} />\n      <S.NameContainer>\n        {items.map((item) => (\n          <S.Name>{item.name}</S.Name>\n        ))}\n      </S.NameContainer>\n      <S.Text>\n        {text}\n      </S.Text>\n      <S.Link>{caption}</S.Link>\n    </S.Wrapper>\n  );\n};\n\nGradientLegend.propTypes = {\n  caption: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  text: PropTypes.string.isRequired,\n};\n","export const Types = {\n  Basic: 'basic',\n  Choropleth: 'choropleth',\n  Gradient: 'gradient',\n  Timeline: 'timeline',\n};\n\nexport const GRADIENT_TEXT = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, metus ut sagittis aliquam, arcu nibh ornare quam, eu molestie eros tellus at leo.';\nexport const GRADIENT_CHECK_CAPTION = 'Check the data';\n","import styled from 'styled-components';\nimport { Color, Font } from 'styles/theme';\n\nexport const Body = styled.p`\n  color: #6B6B6B;\n  font-family: ${Font.body};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 15px;\n`;\n\nexport const Legend = styled.main`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 80px;\n`;\n\nexport const View = styled.body`\n  align-items: center;\n  background: ${Color.background};\n  display: flex;  \n  height: 100vh;\n  justify-content: center;\n  width: 100vw;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion } from 'components/Accordion/accordion';\nimport { BasicLegend } from 'components/BasicLegend/basicLegend';\nimport { ChoroplethLegend } from 'components/ChoroplethLegend/choroplethLegend';\nimport { GradientLegend } from 'components/GradientLegend/gradientLegend';\nimport * as C from './home.constants';\nimport * as S from './home.style';\n\nexport const Home = () => {\n  const [legendData, setLegendData] = useState();\n\n  const getData = () => {\n    fetch('https://raw.githubusercontent.com/Vizzuality/front-end-code-challenge/master/data.json')\n      .then((response) => response.json())\n      .then((data) => setLegendData(data));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getLegendComponent = ({ type, items }) => {\n    const LEGEND_CONTENT = {\n      [C.Types.Basic]: <BasicLegend items={items} />,\n      [C.Types.Choropleth]: <ChoroplethLegend items={items} />,\n      [C.Types.Gradient]: <GradientLegend\n        caption={C.GRADIENT_CHECK_CAPTION}\n        items={items}\n        text={C.GRADIENT_TEXT}\n      />,\n      [C.Types.Timeline]: 'Timeline Content',\n    };\n    return LEGEND_CONTENT[type];\n  };\n\n  return (\n    <S.View>\n      <S.Legend>\n        {legendData && legendData.map((legendItem) => (\n          <Accordion\n            description={legendItem?.description}\n            key={legendItem?.id}\n            title={legendItem?.name}\n          >\n            <S.Body>\n              {getLegendComponent({ type: legendItem.type, items: legendItem.items })}\n            </S.Body>\n          </Accordion>\n        ))}\n      </S.Legend>\n    </S.View>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { GlobalStyles } from './styles/global';\nimport { HOME } from './config/router/paths';\nimport { Home } from './screens/Home/home';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={HOME} component={Home} exact />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","export const HOME = '/';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}